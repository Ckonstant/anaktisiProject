import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Paths;

import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.analysis.core.WhitespaceAnalyzer;
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Field;
import org.apache.lucene.document.TextField;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.store.Directory;
import org.apache.lucene.store.FSDirectory;

import com.opencsv.CSVReader;
import com.opencsv.exceptions.CsvValidationException;
import java.awt.Color;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextArea;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import javax.swing.text.Highlighter.HighlightPainter;
import org.apache.lucene.index.DirectoryReader;
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.queryparser.classic.ParseException;
import org.apache.lucene.queryparser.classic.QueryParser;
import org.apache.lucene.search.IndexSearcher;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.ScoreDoc;
import org.apache.lucene.search.TopDocs;

public class MainGUI extends javax.swing.JFrame {
    
 private static final String CSV_PATH = "C:\\all_lyrics.csv";
    private static final String INDEX_PATH = "C:\\path";
    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Search Now");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Show Previous Page");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton3.setText("Show Next Page");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "song", "artist", "lyrics", "type" }));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Welcome to Music Searcher!(Made by Christos Konstantinidis)");

        jCheckBox2.setSelected(true);
        jCheckBox2.setText("Artist & Title");
        jCheckBox2.setEnabled(false);

        jCheckBox3.setText("Genre");

        jCheckBox4.setText("Lyrics");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 863, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(11, 11, 11)
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12)
                                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30)
                                                .addComponent(jCheckBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(31, 31, 31)
                                                .addComponent(jCheckBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(26, 26, 26)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     try {
         // TODO add your handling code here:
         
String selectedOption = jComboBox1.getSelectedItem().toString();
        jTextArea1.setText("");
         search(jTextField1.getText(), selectedOption, 10);
     } catch (IOException ex) {
         Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
     } catch (ParseException ex) {
         Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
     }
    }//GEN-LAST:event_jButton1ActionPerformed
    public int page = 1; // deikths gia na kratame tis sellides
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String selectedOption = jComboBox1.getSelectedItem().toString();
        
     try {
         jTextArea1.setText("");
         page+=1; // koumpi gia allagi selidas se epomeni gia ta epomena 10 apotelesmata
         search(jTextField1.getText(), selectedOption, page);
         System.out.println(page);
     } catch (IOException ex) {
         Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
     } catch (ParseException ex) {
         Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
     }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String selectedOption = jComboBox1.getSelectedItem().toString();
        
     try {
         jTextArea1.setText("");
         page-=1; //gia ta prohgoumena 10 apotelesmata
         search(jTextField1.getText(), selectedOption, page);
         System.out.println(page);
     } catch (IOException ex) {
         Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
     } catch (ParseException ex) {
         Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
     }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException, CsvValidationException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
            
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
                
            }
        });
        Directory indexDirectory = FSDirectory.open(Paths.get(INDEX_PATH)); //kratame to index opou tha dhmiourghthei to index gia to directory mas
        Analyzer analyzer = new WhitespaceAnalyzer(); //ftiahnoume ton analyzer mas
        //xrhsimopoieite gia tokenizing and analyzing text data prin kanoume indexing
        IndexWriterConfig config = new IndexWriterConfig(analyzer); //krataei tis rithmiseis gia ton analyzer
        IndexWriter indexWriter = new IndexWriter(indexDirectory, config); //telikos grafoume me vasei tis rythmiseis sto lucene index sto path pou orisame.
        
        CSVReader csvReader = new CSVReader(new FileReader(CSV_PATH)); //diavazoume to arheio mas CSV
        String[] headers = csvReader.readNext(); // pernoume thn proti grammi na doume ti pedia ehoume
        String[] line;
        while ((line = csvReader.readNext()) != null) {
            Document document = new Document();
            for (int i = 0; i < line.length; i++) {
                String fieldName = headers[i]; //fieldValue kratame to pedio me vash ta headers
                String fieldValue = line[i]; //kai ti periehei to kathe pedio p.x artist-Beatles , artist-Rihana
               // System.out.println(line[1]);
                if (fieldName.equals("lyrics")) { //
                    // diaspasi ton stihon pou periehonte se polles grammes mesa sto arheio mesa se quotes xorismena me komma
                    StringBuilder sb = new StringBuilder();
                    boolean belongs = false;
                    for (int j = 0; j < fieldValue.length(); j++) {
                        char c = fieldValue.charAt(j);
                        if (c == '\"') {
                            belongs = !belongs;
                        } else if (c == ',' && belongs) {
                            sb.append(' ');
                        } else {
                            sb.append(c);
                        }
                    }
                    fieldValue = sb.toString();
                }
                document.add(new TextField(fieldName, fieldValue, Field.Store.YES)); //telos ta pername sto index me fieldname kai fieldvalue kathos
                // kai me field.store.yes epeidi thelouem na epistrepsoume tis times argotera.
            }
            indexWriter.addDocument(document);
        }
        csvReader.close();
        indexWriter.close();
    }
    public  void search(String searchTerm, String field, int page) throws IOException, ParseException {
        // oi synarthsh search pernei san orismata ena kleidi anazhthshs =searchTerm , ena pedio pou tha ginei anazitisi, kai se poia sellida eimaste.
    int hitsPerPage = 10; //orizoume poses sellides theloume na emfanizonte
    
    int start = (page - 1) * hitsPerPage; // ta top 10 apotelesmata sthn proth sellida me vash thn anazhthsh mas
    Directory indexDirectory = FSDirectory.open(Paths.get(INDEX_PATH)); //anoigoume to index mas gia na vroume ta apotelesmata mas
    IndexReader indexReader = DirectoryReader.open(indexDirectory);
    IndexSearcher indexSearcher = new IndexSearcher(indexReader); // me ton indexSearcher tha kanoume thn anazhthsh mas me to kleidi
    Analyzer analyzer = new WhitespaceAnalyzer();
    QueryParser queryParser = new QueryParser(field, analyzer); //se poio pedio tha ginei h anazhthsh 
    Query query = queryParser.parse(searchTerm);
    TopDocs topDocs = indexSearcher.search(query, start + hitsPerPage); // epistrefoume me vash to query kai kleidi anazhthsh tis top anazhthseis 
    ScoreDoc[] hits = topDocs.scoreDocs; //ta apotelesmata mas apothikeymena se pinaka
    int end = Math.min(hits.length, start + hitsPerPage);
    for (int i = start; i < end; i++) { //loop se ola ta apotelesmata tis anazhthshs kai sto kathe pedio to onomazoumke kai pername ta analoga apotelesmata ths anazhthshs
        Document document = indexSearcher.doc(hits[i].doc);
        String lyrics = document.get("lyrics");
        String artist = document.get("artist");
        String title = document.get("song");
        String type = document.get("type");
        String[] words = searchTerm.split(" ");
        
        
        //String a  ="e";
        //me vasi to checkbox emfanizome ta analoga apotelesmata.
        jTextArea1.append("\n");
        
        if (jCheckBox2.isSelected() == true )
        {
            jTextArea1.append(title + " - " + artist);
            jTextArea1.append("\n");
        }
        if (jCheckBox4.isSelected() == true )
        {
            jTextArea1.append(lyrics);
            jTextArea1.append("\n");
        }
        if (jCheckBox3.isSelected() == true )
        {
            jTextArea1.append(type);
            jTextArea1.append("\n");
        }
        
        System.out.println("\033[1m" + title + " - " + artist + "\033[0m");
        System.out.println(type);
        System.out.println();
        //kanoume hightlight me vazei to searchTerm gia na ginei marked sthn periohi pou emfanizonte ta apotelesmata
        Highlighter highlighter = jTextArea1.getHighlighter();
        HighlightPainter painter = new DefaultHighlighter.DefaultHighlightPainter(Color.YELLOW);
        
        // Highlight the word "example"
        try {
            int startIndex = jTextArea1.getText().indexOf(searchTerm);
            int endIndex = startIndex + searchTerm.length();
            highlighter.addHighlight(startIndex, endIndex, painter);
        } catch (BadLocationException e) {
            e.printStackTrace();
        }
    }
    indexReader.close();

    // Prompt user to change pages
    
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
